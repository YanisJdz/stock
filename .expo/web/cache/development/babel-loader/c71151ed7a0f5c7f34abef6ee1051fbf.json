{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alfa/Documents/L1-Dev/LABDAY/stock/Composants/essai.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DialogInput from 'react-native-dialog-input';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isDialogVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"showDialog\",\n    value: function showDialog(isShow) {\n      this.setState({\n        isDialogVisible: isShow\n      });\n    }\n  }, {\n    key: \"sendInput\",\n    value: function sendInput(inputText) {\n      console.log(\"sendInput (DialogInput#1): \" + inputText);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, React.createElement(DialogInput, {\n        isDialogVisible: this.state.isDialogVisible,\n        title: \"DialogInput 1\",\n        message: \"Message for DialogInput #1\",\n        hintInput: \"HINT INPUT\",\n        submitInput: function submitInput(inputText) {\n          _this2.sendInput(inputText);\n        },\n        closeDialog: function closeDialog() {\n          _this2.showDialog(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.showDialog(true);\n        },\n        style: {\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"Show DialogInput #1\")));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'beige',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/alfa/Documents/L1-Dev/LABDAY/stock/Composants/essai.js"],"names":["React","DialogInput","App","props","state","isDialogVisible","isShow","setState","inputText","console","log","styles","container","sendInput","showDialog","padding","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAFgB;AAKjB;;;;WACD,oBAAWC,MAAX,EAAkB;AAChB,WAAKC,QAAL,CAAc;AAACF,QAAAA,eAAe,EAAEC;AAAlB,OAAd;AACD;;;WACD,mBAAUE,SAAV,EAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAA8BF,SAA1C;AACD;;;WACD,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,eAAe,EAAE,KAAKR,KAAL,CAAWC,eAAzC;AACY,QAAA,KAAK,EAAE,eADnB;AAEY,QAAA,OAAO,EAAE,4BAFrB;AAGY,QAAA,SAAS,EAAG,YAHxB;AAIY,QAAA,WAAW,EAAG,qBAACG,SAAD,EAAe;AAAC,UAAA,MAAI,CAACK,SAAL,CAAeL,SAAf;AAA0B,SAJpE;AAKY,QAAA,WAAW,EAAG,uBAAM;AAAC,UAAA,MAAI,CAACM,UAAL,CAAgB,KAAhB;AAAuB,SALxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,MAAI,CAACA,UAAL,CAAgB,IAAhB;AAAsB,SAAtD;AAAwD,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC;AAAT,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CARF,CADF;AAcD;;;;EA5B8Bf,KAAK,CAACgB,S;;SAAlBd,G;AA+BrB,IAAMS,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport DialogInput from 'react-native-dialog-input';\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isDialogVisible: false,\n    }\n  }\n  showDialog(isShow){\n    this.setState({isDialogVisible: isShow});\n  }\n  sendInput(inputText){\n    console.log(\"sendInput (DialogInput#1): \"+inputText);\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <DialogInput isDialogVisible={this.state.isDialogVisible}\n                    title={\"DialogInput 1\"}\n                    message={\"Message for DialogInput #1\"}\n                    hintInput ={\"HINT INPUT\"}\n                    submitInput={ (inputText) => {this.sendInput(inputText)} }\n                    closeDialog={ () => {this.showDialog(false)}}>\n        </DialogInput>\n        <TouchableOpacity onPress={()=>{this.showDialog(true)}} style={{padding:10}}>\n          <Text>Show DialogInput #1</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'beige',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}