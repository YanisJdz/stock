{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alfa/Documents/L1-Dev/LABDAY/stock/node_modules/react-native-prompt/src/Prompt.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\n\nvar Prompt = function (_Component) {\n  _inherits(Prompt, _Component);\n\n  var _super = _createSuper(Prompt);\n\n  function Prompt() {\n    var _this;\n\n    _classCallCheck(this, Prompt);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      value: '',\n      visible: false\n    };\n\n    _this._onChangeText = function (value) {\n      _this.setState({\n        value: value\n      });\n\n      _this.props.onChangeText(value);\n    };\n\n    _this._onSubmitPress = function () {\n      var value = _this.state.value;\n\n      _this.props.onSubmit(value);\n    };\n\n    _this._onCancelPress = function () {\n      _this.props.onCancel();\n    };\n\n    _this.close = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this._renderDialog = function () {\n      var _this$props = _this.props,\n          title = _this$props.title,\n          placeholder = _this$props.placeholder,\n          defaultValue = _this$props.defaultValue,\n          cancelText = _this$props.cancelText,\n          submitText = _this$props.submitText,\n          borderColor = _this$props.borderColor,\n          promptStyle = _this$props.promptStyle,\n          titleStyle = _this$props.titleStyle,\n          buttonStyle = _this$props.buttonStyle,\n          buttonTextStyle = _this$props.buttonTextStyle,\n          submitButtonStyle = _this$props.submitButtonStyle,\n          submitButtonTextStyle = _this$props.submitButtonTextStyle,\n          cancelButtonStyle = _this$props.cancelButtonStyle,\n          cancelButtonTextStyle = _this$props.cancelButtonTextStyle,\n          inputStyle = _this$props.inputStyle;\n      return React.createElement(View, {\n        style: styles.dialog,\n        key: \"prompt\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.dialogOverlay,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: [styles.dialogContent, {\n          borderColor: borderColor\n        }, promptStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.dialogTitle, {\n          borderColor: borderColor\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.dialogTitleText, titleStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, title)), React.createElement(View, {\n        style: styles.dialogBody,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, _extends({\n        style: [styles.dialogInput, inputStyle],\n        defaultValue: defaultValue,\n        onChangeText: _this._onChangeText,\n        placeholder: placeholder,\n        autoFocus: true,\n        underlineColorAndroid: \"white\"\n      }, _this.props.textInputProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: [styles.dialogFooter, {\n          borderColor: borderColor\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: _this._onCancelPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.dialogAction, buttonStyle, cancelButtonStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: [styles.dialogActionText, buttonTextStyle, cancelButtonTextStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, cancelText))), React.createElement(TouchableWithoutFeedback, {\n        onPress: _this._onSubmitPress,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.dialogAction, buttonStyle, submitButtonStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: [styles.dialogActionText, buttonTextStyle, submitButtonTextStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, submitText))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Prompt, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        value: this.props.defaultValue\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var visible = nextProps.visible,\n          defaultValue = nextProps.defaultValue;\n      this.setState({\n        visible: visible,\n        value: defaultValue\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Modal, {\n        onRequestClose: function onRequestClose() {\n          return _this2.close();\n        },\n        transparent: true,\n        visible: this.props.visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, this._renderDialog());\n    }\n  }]);\n\n  return Prompt;\n}(Component);\n\nPrompt.propTypes = {\n  title: PropTypes.string.isRequired,\n  visible: PropTypes.bool,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  cancelText: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  submitText: PropTypes.string,\n  onChangeText: PropTypes.func.isRequired,\n  borderColor: PropTypes.string,\n  promptStyle: PropTypes.object,\n  titleStyle: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  buttonTextStyle: PropTypes.object,\n  submitButtonStyle: PropTypes.object,\n  submitButtonTextStyle: PropTypes.object,\n  cancelButtonStyle: PropTypes.object,\n  cancelButtonTextStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n  textInputProps: PropTypes.object\n};\nPrompt.defaultProps = {\n  visible: false,\n  defaultValue: '',\n  cancelText: 'Cancel',\n  submitText: 'OK',\n  borderColor: '#ccc',\n  promptStyle: {},\n  titleStyle: {},\n  buttonStyle: {},\n  buttonTextStyle: {},\n  submitButtonStyle: {},\n  submitButtonTextStyle: {},\n  cancelButtonStyle: {},\n  cancelButtonTextStyle: {},\n  inputStyle: {},\n  onChangeText: function onChangeText() {}\n};\nexport { Prompt as default };\n;","map":{"version":3,"sources":["/Users/alfa/Documents/L1-Dev/LABDAY/stock/node_modules/react-native-prompt/src/Prompt.js"],"names":["React","Component","PropTypes","styles","Prompt","state","value","visible","_onChangeText","setState","props","onChangeText","_onSubmitPress","onSubmit","_onCancelPress","onCancel","close","_renderDialog","title","placeholder","defaultValue","cancelText","submitText","borderColor","promptStyle","titleStyle","buttonStyle","buttonTextStyle","submitButtonStyle","submitButtonTextStyle","cancelButtonStyle","cancelButtonTextStyle","inputStyle","dialog","dialogOverlay","dialogContent","dialogTitle","dialogTitleText","dialogBody","dialogInput","textInputProps","dialogFooter","dialogAction","dialogActionText","nextProps","propTypes","string","isRequired","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport {\n  Modal,\n  Platform,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\nimport styles from './styles';\n\nexport default class Prompt extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    visible: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    placeholder: PropTypes.string,\n    onCancel: PropTypes.func.isRequired,\n    cancelText: PropTypes.string,\n    onSubmit: PropTypes.func.isRequired,\n    submitText: PropTypes.string,\n    onChangeText: PropTypes.func.isRequired,\n    borderColor: PropTypes.string,\n    promptStyle: PropTypes.object,\n    titleStyle: PropTypes.object,\n    buttonStyle: PropTypes.object,\n    buttonTextStyle: PropTypes.object,\n    submitButtonStyle: PropTypes.object,\n    submitButtonTextStyle: PropTypes.object,\n    cancelButtonStyle: PropTypes.object,\n    cancelButtonTextStyle: PropTypes.object,\n    inputStyle: PropTypes.object,\n    textInputProps: PropTypes.object,\n  };\n\n  static defaultProps = {\n    visible: false,\n    defaultValue: '',\n    cancelText: 'Cancel',\n    submitText: 'OK',\n    borderColor:'#ccc',\n    promptStyle: {},\n    titleStyle: {},\n    buttonStyle: {},\n    buttonTextStyle: {},\n    submitButtonStyle: {},\n    submitButtonTextStyle: {},\n    cancelButtonStyle: {},\n    cancelButtonTextStyle: {},\n    inputStyle: {},\n    onChangeText: () => {},\n  };\n\n  state = {\n    value: '',\n    visible: false,\n  };\n\n  componentDidMount() {\n    this.setState({value: this.props.defaultValue});\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { visible, defaultValue } = nextProps;\n    this.setState({ visible, value:defaultValue });\n  }\n\n  _onChangeText = (value) => {\n    this.setState({ value });\n    this.props.onChangeText(value);\n  };\n\n  _onSubmitPress = () => {\n    const { value } = this.state;\n    this.props.onSubmit(value);\n  };\n\n  _onCancelPress = () => {\n    this.props.onCancel();\n  };\n\n  close = () => {\n    this.setState({visible: false});\n  };\n\n  _renderDialog = () => {\n    const {\n      title,\n      placeholder,\n      defaultValue,\n      cancelText,\n      submitText,\n      borderColor,\n      promptStyle,\n      titleStyle,\n      buttonStyle,\n      buttonTextStyle,\n      submitButtonStyle,\n      submitButtonTextStyle,\n      cancelButtonStyle,\n      cancelButtonTextStyle,\n      inputStyle\n    } = this.props;\n    return (\n      <View style={styles.dialog} key=\"prompt\">\n        <View style={styles.dialogOverlay}/>\n        <View style={[styles.dialogContent, { borderColor }, promptStyle]}>\n          <View style={[styles.dialogTitle, { borderColor }]}>\n            <Text style={[styles.dialogTitleText, titleStyle]}>\n              { title }\n            </Text>\n          </View>\n          <View style={styles.dialogBody}>\n            <TextInput\n              style={[styles.dialogInput, inputStyle]}\n              defaultValue={defaultValue}\n              onChangeText={this._onChangeText}\n              placeholder={placeholder}\n              autoFocus={true}\n              underlineColorAndroid=\"white\"\n              {...this.props.textInputProps} />\n          </View>\n          <View style={[styles.dialogFooter, { borderColor }]}>\n            <TouchableWithoutFeedback onPress={this._onCancelPress}>\n              <View style={[styles.dialogAction, buttonStyle, cancelButtonStyle]}>\n                <Text style={[styles.dialogActionText, buttonTextStyle, cancelButtonTextStyle]}>\n                  {cancelText}\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n            <TouchableWithoutFeedback onPress={this._onSubmitPress}>\n              <View style={[styles.dialogAction, buttonStyle, submitButtonStyle]}>\n                <Text style={[styles.dialogActionText, buttonTextStyle, submitButtonTextStyle]}>\n                  {submitText}\n                </Text>\n              </View>\n            </TouchableWithoutFeedback>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <Modal onRequestClose={() => this.close()} transparent={true} visible={this.props.visible}>\n        {this._renderDialog()}\n      </Modal>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}